package demo4;

import java.util.Arrays;

public class BubbleSort {

    public static void main(String[] args)
    {
        int[] arr = new int[] {93,85,97,26,36,73,9,18,22,41,10,12};
        bubbleSort(arr);
    }

    //冒泡排序

    /**
     * 共需要比较length-1轮
     *
     * @param data
     */
    public static void bubbleSort(int[] data)
    {
        int[] newArr = new int[data.length];
        for(int i=0;i<data.length;i++)
        {
            for(int j=0;j<data.length-1-i;j++)
            {
                if(data[j] > data[j+1])
                {
                    int tmp = data[j];
                    data[j] = data[j + 1];
                    data[j+1] = tmp;
                    System.out.println(Arrays.toString(data));
                }
            }
        }
    }

    /**
     * [85, 93, 97, 26, 36, 73, 9, 18, 22, 41, 10, 12]
     * [85, 93, 26, 97, 36, 73, 9, 18, 22, 41, 10, 12]
     * [85, 93, 26, 36, 97, 73, 9, 18, 22, 41, 10, 12]
     * [85, 93, 26, 36, 73, 97, 9, 18, 22, 41, 10, 12]
     * [85, 93, 26, 36, 73, 9, 97, 18, 22, 41, 10, 12]
     * [85, 93, 26, 36, 73, 9, 18, 97, 22, 41, 10, 12]
     * [85, 93, 26, 36, 73, 9, 18, 22, 97, 41, 10, 12]
     * [85, 93, 26, 36, 73, 9, 18, 22, 41, 97, 10, 12]
     * [85, 93, 26, 36, 73, 9, 18, 22, 41, 10, 97, 12]
     * [85, 93, 26, 36, 73, 9, 18, 22, 41, 10, 12, 97]
     * [85, 26, 93, 36, 73, 9, 18, 22, 41, 10, 12, 97]
     * [85, 26, 36, 93, 73, 9, 18, 22, 41, 10, 12, 97]
     * [85, 26, 36, 73, 93, 9, 18, 22, 41, 10, 12, 97]
     * [85, 26, 36, 73, 9, 93, 18, 22, 41, 10, 12, 97]
     * [85, 26, 36, 73, 9, 18, 93, 22, 41, 10, 12, 97]
     * [85, 26, 36, 73, 9, 18, 22, 93, 41, 10, 12, 97]
     * [85, 26, 36, 73, 9, 18, 22, 41, 93, 10, 12, 97]
     * [85, 26, 36, 73, 9, 18, 22, 41, 10, 93, 12, 97]
     * [85, 26, 36, 73, 9, 18, 22, 41, 10, 12, 93, 97]
     * [26, 85, 36, 73, 9, 18, 22, 41, 10, 12, 93, 97]
     * [26, 36, 85, 73, 9, 18, 22, 41, 10, 12, 93, 97]
     * [26, 36, 73, 85, 9, 18, 22, 41, 10, 12, 93, 97]
     * [26, 36, 73, 9, 85, 18, 22, 41, 10, 12, 93, 97]
     * [26, 36, 73, 9, 18, 85, 22, 41, 10, 12, 93, 97]
     * [26, 36, 73, 9, 18, 22, 85, 41, 10, 12, 93, 97]
     * [26, 36, 73, 9, 18, 22, 41, 85, 10, 12, 93, 97]
     * [26, 36, 73, 9, 18, 22, 41, 10, 85, 12, 93, 97]
     * [26, 36, 73, 9, 18, 22, 41, 10, 12, 85, 93, 97]
     * [26, 36, 9, 73, 18, 22, 41, 10, 12, 85, 93, 97]
     * [26, 36, 9, 18, 73, 22, 41, 10, 12, 85, 93, 97]
     * [26, 36, 9, 18, 22, 73, 41, 10, 12, 85, 93, 97]
     * [26, 36, 9, 18, 22, 41, 73, 10, 12, 85, 93, 97]
     * [26, 36, 9, 18, 22, 41, 10, 73, 12, 85, 93, 97]
     * [26, 36, 9, 18, 22, 41, 10, 12, 73, 85, 93, 97]
     * [26, 9, 36, 18, 22, 41, 10, 12, 73, 85, 93, 97]
     * [26, 9, 18, 36, 22, 41, 10, 12, 73, 85, 93, 97]
     * [26, 9, 18, 22, 36, 41, 10, 12, 73, 85, 93, 97]
     * [26, 9, 18, 22, 36, 10, 41, 12, 73, 85, 93, 97]
     * [26, 9, 18, 22, 36, 10, 12, 41, 73, 85, 93, 97]
     * [9, 26, 18, 22, 36, 10, 12, 41, 73, 85, 93, 97]
     * [9, 18, 26, 22, 36, 10, 12, 41, 73, 85, 93, 97]
     * [9, 18, 22, 26, 36, 10, 12, 41, 73, 85, 93, 97]
     * [9, 18, 22, 26, 10, 36, 12, 41, 73, 85, 93, 97]
     * [9, 18, 22, 26, 10, 12, 36, 41, 73, 85, 93, 97]
     * [9, 18, 22, 10, 26, 12, 36, 41, 73, 85, 93, 97]
     * [9, 18, 22, 10, 12, 26, 36, 41, 73, 85, 93, 97]
     * [9, 18, 10, 22, 12, 26, 36, 41, 73, 85, 93, 97]
     * [9, 18, 10, 12, 22, 26, 36, 41, 73, 85, 93, 97]
     * [9, 10, 18, 12, 22, 26, 36, 41, 73, 85, 93, 97]
     * [9, 10, 12, 18, 22, 26, 36, 41, 73, 85, 93, 97]
     */
}
